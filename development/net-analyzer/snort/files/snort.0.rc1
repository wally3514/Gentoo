#!/sbin/runscript
# Copyright 1999-2010 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: /var/cvsroot/gentoo-x86/net-analyzer/snort/files/snort.rc10,v 1.1 2010/11/02 18:22:10 patrick Exp $

opts="checkconfig reload"

# Override the defauilt value of conf set by runscript
# This allows us to use a single conf.d file
conf="/etc/conf.d/snort" && source ${conf}

depend() {
	need net
	after mysql
	after postgresql
}

config_id=snort${SVCNAME#*.}
a=() inst_name=() conf_name=() pcap_iface=() cpu_id=()
a="config_${config_id}[@]"
a=( "${!a}" )
inst_name="${a[0]}"
conf_name="${a[1]}"
pcap_iface="${a[2]}"
cpu_id="${a[3]}"

checkconfig() {
	local max_cpus=$[ `grep -c processor /proc/cpuinfo` - 1 ]

	if [ ! -e ${inst_conf} ] ; then
		eerror "File /etc/snort/${inst_name}/${conf_name} not found."
		eerror "Check your settings for config_${config_id} in /etc/conf.d/snort."
		return 1
	fi

	if [ "${cpu_id}" != "none" ]; then 
		if [ ${cpu_id} -gt $max_cpus ]; then
			eerror "config_$config_id in /etc/conf.d/snort contains a processor ID"
			eerror "that is greater than the current number of system processors."
			return 1
		fi
	fi
}

start() {
	checkconfig || return 1
	ebegin "Starting Snort:"
	eindent
		einfo "Instance = ${inst_name}"
		einfo "Config file = /etc/snort/${inst_name}/${conf_name}"
		einfo "Interface = ${pcap_iface}"
		if [ "${cpu_id}" != "none" ]; then
			einfo "CPU = ${cpu_id}"
		fi
	eoutdent

	if [ "${cpu_id}" == "none" ]; then
		start-stop-daemon --start --quiet --exec /usr/bin/snort \
			-- --nolock-pidfile --pid-path /var/run/snort -D -R "-${inst_name}" -i "${pcap_iface}" \
			-c "/etc/snort/${inst_name}/${conf_name}" >/dev/null 2>&1
		eend $?
	else
		start-stop-daemon --start --quiet --exec /usr/bin/taskset -- -c ${cpu_id} /usr/bin/snort \
			--nolock-pidfile --pid-path /var/run/snort -D -R "-${inst_name}" -i "${pcap_iface}" \
			-c "/etc/snort/${inst_name}/${conf_name}" >/dev/null 2>&1
	fi
}

stop() {
	ebegin "Stopping Snort:"
	eindent
		einfo "Instance = ${inst_name}"
		einfo "Interface = ${pcap_iface}"
	eoutdent
	start-stop-daemon --stop --pidfile /var/run/snort/snort_"${pcap_iface}"-"${inst_name}.pid"
	# Snort needs a few seconds to fully shutdown
	sleep 10
	eend $?
}

reload() {

	local snort_pid="`cat /var/run/snort/snort_${pcap_iface}-${inst_name}.pid`"
	local snort_user="`ps -p ${snort_pid} --no-headers -o user`"

        if [ ! -f /var/run/snort/snort_"${pcap_iface}"-"${inst_name}.pid" ]; then
        	eerror "Snort isn't running"
                return 1
        fi

	if [ ${snort_user} != root ]; then
		eerror "Snort must be running a root for reload to work!"
		return 1
	fi

        checkconfig || return 1
        ebegin "Reloading Snort:"
	eindent
		einfo "Instance = ${inst_name}"
		einfo "Config file = /etc/snort/${inst_name}/${conf_name}"
		einfo "Interface = ${pcap_iface}"
		if [ "${cpu_id}" != "none" ]; then
			einfo "CPU = ${cpu_id}"
		fi
	eoutdent
        start-stop-daemon --signal HUP --pidfile /var/run/snort/snort_"${pcap_iface}"-"${inst_name}.pid"
        eend $?
}
